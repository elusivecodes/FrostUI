// Loop a map and call a function on each value.
// @param $map
// @param $func
// @param ...$args
@function map-loop($map, $func, $args...) {
    $result: ();

    @each $key, $value in $map {
        // allow to pass the $key and $value of the map as an function argument
        $temp: ();
        @each $arg in $args {
            $temp: append($temp, if($arg == "$key", $key, if($arg == "$value", $value, $arg)));
        }

        $result: map-merge($result, ($key: call(get-function($func), $temp...)));
    }

    @return $result;
}

// Search and replace a substring within a string.
// @param $string
// @param $search
// @param $replace
@function str-replace($string, $search, $replace) {
    $index: str-index($string, $search);

    @if $index {
        @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
    }

    @return $string;
}

// Escape a color for use in SVG.
// @param $color
@function svg-color($color) {
    $string: "" + $color;

    @if str-index($string, "rgb") {
        $string: str-replace($string, "(", "%28");
        $string: str-replace($string, ")", "%29");
    } @else if str-index($string, "#") {
        $string: str-replace($string, "#", "%23");
    }

    @return $string;
}
