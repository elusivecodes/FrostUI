// Loop a map and call a function on each value.
// @param $map
// @param $func
// @param ...$args
@function map-loop($map, $func, $args...) {
    $result: ();

    @each $key, $value in $map {
        // allow to pass the $key and $value of the map as an function argument
        $temp: ();
        @each $arg in $args {
            $temp: append($temp, if($arg == "$key", $key, if($arg == "$value", $value, $arg)));
        }

        $result: map-merge($result, ($key: call(get-function($func), $temp...)));
    }

    @return $result;
}

// Create an RGBA css value.
// @param $rgbVar
// @param opacityVar
@function rgba-css-var($rgbVar, $opacityVar) {
    @return rgba(var(--ui-#{$rgbVar}-rgb), var(--ui-#{$opacityVar}-opacity));
}

// Generate a responsive font size.
// @param $size
@function text-size($size) {
    $max-size: $size * 1rem;

    @if ($size < 1.5) {
        @return $max-size;
    }

    $ratio: ($size * 2) - 2;
    $min-size: ($ratio * .1rem) + 1.25rem;
    $offset: $ratio * .33vw;

    @return clamp(#{$min-size}, calc(#{$min-size} + #{$offset}), #{$max-size});
}
