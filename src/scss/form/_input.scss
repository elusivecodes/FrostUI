.form-input {
    position: relative;
    width: 100%;
}

.input-filled,
.input-outline {
    display: block;
    width: 100%;
    padding: $input-padding-y $input-padding-x;
    font-size: $input-font-size;
    line-height: $input-line-height;
    color: $input-color;

    &::placeholder {
        color: $input-placeholder-color;
    }

    &:hover {
        z-index: 1;
    }

    &:focus {
        z-index: 2;
        outline: 0;
    }

    &:active,
    &.active {
        z-index: 3;
    }

    &:disabled,
    &.disabled {
        pointer-events: none;

        &,
        &:hover {
            background-color: $input-disabled-bg;
        }
    }

    &[readonly],
    &.readonly {
        color: $input-placeholder-color;
    }

    @at-root #{selector-append("select", &)} {
        appearance: none;

        &:not([multiple]) {
            @at-root {
                #{&},
                #{selector-nest("[data-ui-theme=\"light\"]", &)} {
                    --ui-select-arrow-background-image: #{$input-select-arrow-background-image};
                }

                #{selector-nest("[data-ui-theme=\"dark\"]", &)} {
                    --ui-select-arrow-background-image: #{$input-select-arrow-background-image-dark};
                }
            }

            padding-right: calc(#{$input-padding-x * 2} + #{$input-select-arrow-size});
            background-image: var(--ui-select-arrow-background-image);
            background-repeat: no-repeat;
            background-position: right $input-padding-x center;
            background-size: $input-select-arrow-size #{$input-select-arrow-size * .75};
        }

        &[multiple] {
            padding: 0;

            option {
                padding: $input-padding-y $input-padding-x;
            }
        }
    }

    &[type="file"] {
        overflow: hidden;

        &:not(:disabled):not([readonly]) {
            cursor: pointer;
        }
    }

    &::file-selector-button {
        padding: $input-padding-y $input-padding-x;
        margin: (-$input-padding-y) (-$input-padding-x);
        margin-inline-end: $input-padding-x;
        color: $input-file-button-color;
        pointer-events: none;
        background-color: $input-file-button-bg;
        border-color: inherit;
        border-style: solid;
        border-width: 0;
        border-inline-end-width: $input-border-width;
        border-radius: 0;
    }

    &:hover:not(:disabled):not([readonly])::file-selector-button {
        background-color: var(--ui-secondary-bg);
    }

    &::-webkit-date-and-time-value {
        min-width: 85px;
        margin: 0;
    }

    &::-webkit-datetime-edit {
        display: block;
        padding: 0;
    }
}

.input-filled {
    background-color: var(--ui-input-filled-bg, #{$input-filled-bg});
    border: 0;
    border-bottom: $input-border-width var(--ui-border-style) var(--ui-input-filled-border-color, #{$input-filled-border-color});

    &:hover {
        background-color: var(--ui-input-filled-hover-bg, #{$input-filled-hover-bg});
    }

    &:focus,
    &.focus {
        background-color: var(--ui-input-filled-focus-bg, #{$input-filled-focus-bg});
    }
}

.input-outline {
    background-color: $input-outline-bg;
    border: $input-border-width var(--ui-border-style) var(--ui-input-border-color, #{$input-border-color});
    @include border-radius($input-outline-border-radius);

    &:hover {
        border-color: $input-outline-hover-border-color;
    }

    &:focus,
    &.focus {
        border-color: $input-outline-focus-border-color;
        box-shadow: 0 0 0 $input-outline-focus-shadow-width $input-outline-focus-shadow-color;
    }
}

.input-sm {
    min-height: calc(#{$input-line-height * 1em} + #{$input-sm-padding-y * 2} + (#{$input-border-width} * 2));
    padding: $input-sm-padding-y $input-sm-padding-x;
    font-size: $input-sm-font-size;

    &::file-selector-button {
        padding: $input-sm-padding-y $input-sm-padding-x;
        margin: (-$input-sm-padding-y) (-$input-sm-padding-x);
        margin-inline-end: $input-sm-padding-x;
    }

    @at-root select#{&}[multiple] option {
        padding: $input-sm-padding-y $input-sm-padding-x;
    }
}

.input-lg {
    min-height: calc(#{$input-line-height * 1em} + #{$input-lg-padding-y * 2} + (#{$input-border-width} * 2));
    padding: $input-lg-padding-y $input-lg-padding-x;
    font-size: $input-lg-font-size;

    &::file-selector-button {
        padding: $input-lg-padding-y $input-lg-padding-x;
        margin: (-$input-lg-padding-y) (-$input-lg-padding-x);
        margin-inline-end: $input-lg-padding-x;
    }

    @at-root select#{&}[multiple] option {
        padding: $input-lg-padding-y $input-lg-padding-x;
    }
}

.form-input-color {
    width: $input-color-width;
}

.input-color {
    width: $input-color-width;
    height: calc(#{$input-line-height * 1em} + #{$input-padding-y * 2} + (#{$input-border-width} * 2));
    padding: $input-padding-y;

    &:not(:disabled):not([readonly]) {
        cursor: pointer;
    }

    &::-moz-color-swatch {
        border: 0 !important;
    }

    &::-webkit-color-swatch {
        border: 0 !important;
    }

    &.input-sm {
        height: calc(#{$input-line-height * 1em} + #{$input-sm-padding-y * 2} + (#{$input-border-width} * 2));
    }

    &.input-lg {
        height: calc(#{$input-line-height * 1em} + #{$input-lg-padding-y * 2} + (#{$input-border-width} * 2));
    }

    &.input-outline {
        &::-moz-color-swatch {
            @include border-radius($input-outline-border-radius);
        }

        &::-webkit-color-swatch {
            @include border-radius($input-outline-border-radius);
        }
    }
}

.ripple-line {
    position: absolute;
    bottom: 0;
    left: 0;
    z-index: 4;
    width: 100%;
    height: calc($input-border-width * 2);
    background-color: $ripple-line-bg;
    opacity: 0;
    transform: scaleX(0);
    transition: all $transition-time $transition-type;
    transition-property: transform, opacity;

    @at-root {

        .input-filled:focus~#{&},
        .input-filled.focus~#{&} {
            opacity: 1;
            transform: scaleX(1);
        }
    }
}
