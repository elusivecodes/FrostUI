.mix-btn(@color) {
    background-color: @color;

    &,
    &:hover,
    &:focus {
        .text-color(@color);
    }

    .btn-check:checked + &,
    &.active,
    &.active:hover {
        background-color: shade(@color, @bg-darker);
    }

    .btn-check:checked + &:focus,
    .btn-check:checked:focus + &,
    &.active:focus,
    &:hover {
        @luma: unit(luma(@color));
        @divider: if((@luma < 55), 1, 2);
        background-color: shade(@color, @bg-dark / @divider);
    }

    .btn-check:focus + &,
    &:focus {
        background-color: tint(@color, @bg-light);
    }
}

.mix-btn-outline(@color) {
    background-color: transparent;
    border-color: @color;

    &,
    &:hover,
    &:focus {
        color: @color;
    }

    .btn-check:checked + &,
    &.active,
    &.active:hover {
        background-color: transparent;
        color: shade(@color, @text-dark);
        border-color: shade(@color, @border-dark);
    }

    .btn-check:checked + &:focus,
    .btn-check:checked:focus + &,
    &:hover {
        background-color: fade(@color, 15%);
    }

    .btn-check:focus + &,
    &:focus {
        background-color: fade(@color, 25%);
    }

    &.ripple > .ripple-effect {
        background-color: fade(@color, 30%);
    }
}

.btn {
    display: inline-block;
    font-family: @font-family;
    font-weight: @font-weight;
    line-height: @line-height;
    text-align: center;
    white-space: nowrap;
    vertical-align: middle;
    cursor: pointer;
    user-select: none;
    background-color: transparent;
    border: @border-size @border-style @border-color;
    padding: (@spacing / 4) (@spacing / 2);
    font-size: @font-size-md;
    border-radius: @border-radius;
    transition: all @transition-time @transition-type;
    transition-property: color, background-color, box-shadow;

    &,
    &:hover,
    &:focus {
        color: @text;
        text-decoration: none;
    }

    .btn-check:focus + &,
    &:focus {
        outline: 0;
        box-shadow: @shadow-sm;
    }

    .btn-check:checked + &,
    .btn-check:active + &,
    &:active,
    &.active {
        box-shadow: @shadow;
    }

    &:disabled,
    &.disabled,
    fieldset:disabled & {
        opacity: @disabled-opacity;
        pointer-events: none;
    }
}

.btn-link {
    color: @link;
    border-color: transparent;
    text-decoration: none;

    &:hover,
    &:focus {
        text-decoration: underline;
    }

    &:hover {
        color: shade(@color, @text-dark);
    }

    &:focus {
        color: tint(@color, @text-light);
        box-shadow: none;
    }

    &:disabled,
    &.disabled {
        color: @secondary;
    }
}

.btn-lg {
    padding: (@spacing / 3) @spacing;
    font-size: @font-size-lg;
}

.btn-sm {
    font-size: @font-size-sm;
}

.btn-primary {
    .mix-btn(@primary);
}

.btn-secondary {
    .mix-btn(@secondary);
}

.btn-success {
    .mix-btn(@success);
}

.btn-info {
    .mix-btn(@info);
}

.btn-warning {
    .mix-btn(@warning);
}

.btn-danger {
    .mix-btn(@danger);
}

.btn-light {
    .mix-btn(@light);
}

.btn-dark {
    .mix-btn(@dark);
}

.btn-outline-primary {
    .mix-btn-outline(@primary);
}

.btn-outline-secondary {
    .mix-btn-outline(@secondary);
}

.btn-outline-success {
    .mix-btn-outline(@success);
}

.btn-outline-info {
    .mix-btn-outline(@info);
}

.btn-outline-warning {
    .mix-btn-outline(@warning);
}

.btn-outline-danger {
    .mix-btn-outline(@danger);
}

.btn-outline-light {
    .mix-btn-outline(@light);
}

.btn-outline-dark {
    .mix-btn-outline(@dark);
}